Sistema operativo utilizado
Linux debian 5.10.0-25-arm64 #1 SMP Debian 5.10.191-1 (2023-08-16) aarch64 GNU/Linux
==== run-san ====
gcc -g -DSAN=1 -fsanitize=address -fsanitize=undefined -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-san
./viajante.bin-san
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.509376
0 5 6 17 32 7 26 14 21 15 23 22 8 10 18 2 3 28 16 1 30 4 31 19 9 20 11 24 13 25 12 27 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.883679
0 18 14 19 16 5 2 13 11 17 1 3 20 29 23 21 32 15 9 27 25 10 28 4 6 24 22 8 12 7 26 30 31 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.348338
0 32 26 13 16 24 17 11 2 3 27 9 21 29 8 1 31 30 4 10 19 28 15 7 18 5 12 6 23 20 22 14 25 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.766688
0 12 9 14 18 27 15 26 30 21 22 25 5 2 19 6 24 17 11 7 32 29 20 23 3 28 16 4 31 13 10 8 1 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.820737
0 32 13 3 9 12 7 26 11 5 14 22 29 15 18 20 8 25 28 2 17 6 24 1 30 31 16 4 10 19 27 23 21 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.306433
0 23 20 29 22 12 18 14 15 32 9 26 8 2 25 19 28 30 3 5 16 10 21 7 1 4 31 27 6 17 11 24 13 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.270912
0 20 25 7 18 21 23 5 19 32 12 9 27 10 16 1 31 2 28 11 24 6 15 14 26 17 13 3 4 30 8 29 22 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=12.127892
0 12 7 32 15 6 17 20 25 26 27 23 29 18 31 3 8 30 28 19 2 5 10 4 1 9 13 11 24 14 16 22 21 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.835393
0 15 26 10 19 4 9 24 28 16 17 12 32 13 11 6 2 18 25 5 22 1 30 27 29 23 3 31 8 20 14 21 7 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=11.386673
0 29 23 12 15 32 7 6 28 1 4 19 16 20 27 9 26 31 22 18 11 24 25 30 3 2 8 10 17 5 13 14 21 0
Tiempo=11690

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=7315 speedup=1.598086 distancia minima=11.306433
0 23 20 29 22 12 18 14 15 32 9 26 8 2 25 19 28 30 3 5 16 10 21 7 1 4 31 27 6 17 11 24 13 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run-g ====
gcc -g -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin-g
./viajante.bin-g
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.833284
0 2 15 24 20 4 6 13 14 7 16 23 11 32 18 1 19 8 30 25 12 10 27 21 31 17 3 22 9 29 26 5 28 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.084676
0 13 25 7 32 3 1 18 12 16 5 8 28 29 23 30 22 17 9 26 10 4 31 24 11 21 15 20 27 19 6 2 14 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.602032
0 11 21 17 18 1 9 26 23 6 4 30 13 20 19 29 22 8 28 16 5 10 32 3 12 25 7 2 15 24 27 14 31 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.217731
0 15 20 11 6 7 3 32 13 2 24 16 10 22 25 21 27 31 14 1 19 17 9 12 29 8 5 23 26 30 18 28 4 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.711483
0 8 16 23 26 5 22 29 9 1 30 28 31 10 21 15 13 20 25 19 18 3 4 2 27 14 32 12 11 6 24 7 17 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.580446
0 6 1 12 18 17 21 30 23 16 29 22 28 27 4 14 2 24 7 8 5 31 3 19 25 32 15 11 20 13 9 26 10 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.723212
0 4 2 20 14 17 12 25 10 29 30 9 22 23 26 8 1 32 19 11 21 28 7 18 5 16 3 13 24 6 15 27 31 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=9.133752
0 31 12 3 1 18 22 17 19 6 24 14 2 10 28 4 11 32 25 5 8 9 30 29 23 26 16 7 27 13 21 20 15 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=10.482360
0 31 13 15 28 4 6 11 18 1 30 23 24 21 20 9 19 12 32 3 25 17 10 27 2 29 26 7 16 8 22 5 14 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=9.353776
0 28 30 12 32 22 26 25 1 9 19 3 18 17 8 5 23 16 29 6 2 27 10 13 7 14 31 11 4 21 24 15 20 0
Tiempo=6680

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=2131 speedup=3.134679 distancia minima=9.084676
0 13 25 7 32 3 1 18 12 16 5 8 28 29 23 30 22 17 9 26 10 4 31 24 11 21 15 20 27 19 6 2 14 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
==== run ====
gcc -O -DOPT=1 -Wall -Werror -pedantic -std=c18 -Wno-unused-function  test-viajante.c viajante.c -lm -o viajante.bin
./viajante.bin
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultados viajante: nperm=2000000 min=2.175692
0 1 2 4 5 3 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.652487
0 10 25 8 9 21 16 3 18 6 32 17 19 13 31 30 24 7 20 27 23 11 12 29 15 14 2 5 22 28 26 4 1 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.588592
0 19 18 1 8 17 6 4 24 30 28 14 5 20 26 22 13 21 23 15 29 25 3 10 16 32 27 9 12 11 31 2 7 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.621894
0 29 10 18 8 3 25 15 26 4 12 1 11 27 23 16 2 31 19 14 17 24 22 7 13 20 5 30 32 21 28 6 9 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.508572
0 3 7 15 19 20 22 14 31 8 12 23 27 9 24 26 2 28 30 6 17 21 10 16 11 32 1 4 5 13 25 18 29 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.714583
0 15 8 21 4 6 18 25 3 29 16 1 24 7 12 11 20 5 19 31 13 22 2 14 27 9 23 26 30 28 32 10 17 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.614258
0 32 21 23 27 24 16 2 22 13 10 3 8 18 26 4 6 30 28 7 14 1 9 11 17 29 25 15 5 20 19 31 12 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.661196
0 21 12 6 31 16 4 28 30 11 17 10 24 32 26 2 13 19 18 1 27 23 25 29 15 8 3 7 9 20 5 22 14 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultados viajante: nperm=1250000 min=11.956951
0 7 22 20 16 3 9 10 25 15 29 28 24 6 8 12 19 30 31 17 27 18 32 26 14 5 2 13 4 21 11 23 1 0
Test 1: ejemplo con solo 6 ciudades
Calculando secuencialmente
Resultados viajante: nperm=8000000 min=2.175692
0 1 2 4 5 3 0
Calculando en paralelo
Resultado final: nperm=8000000 distancia minima=2.175692
0 1 2 4 5 3 0
Test 1 aprobado

--------------------------------------------------

Test 2: Un ejemplo grande con 33 ciudades
Precalentando secuencialmente
Resultados viajante: nperm=100000 min=12.483867
0 11 24 3 28 20 14 13 7 29 8 32 27 10 1 9 18 21 4 23 15 25 6 12 5 2 22 19 30 31 26 16 17 0
Calculando secuencialmente con 10000000 permutaciones
Resultados viajante: nperm=10000000 min=10.962257
0 8 26 11 18 10 15 25 17 16 12 20 7 22 19 28 6 30 31 1 4 27 21 24 14 13 2 5 32 9 23 3 29 0
Tiempo=4478

-----
Calculando en paralelo con 10000000 permutaciones, intento 1
Resultado final: Tiempo=1264 speedup=3.542722 distancia minima=11.508572
0 3 7 15 19 20 22 14 31 8 12 23 27 9 24 26 2 28 30 6 17 21 10 16 11 32 1 4 5 13 25 18 29 0
Test 2 aprobado: speedup >= 1.5x

Felicitaciones: su tarea funciona
